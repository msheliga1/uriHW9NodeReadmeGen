// MJS URI HW 9 - Readme.md generator using fs and inquirier.
// TODO: Include packages needed for this application
const fs = require('fs');
const inq = require('inquirer');
const gm = require('./utils/generateMarkdown');

// TODO: Create a function to write README file
function writeToFile(fileName, data) {
    console.log("Starting writeToFile ");   
    fs.writeFile('README.md', data, (err) => err ? console.log("WriteFile Err: " + err): console.log("Success!"));
}

// ====== All Init Methods Next =========================
// TODO: Create a function to initialize app - and call the main inquirer .prompt routine. MJS 1.24.24
function init() {
    console.log("Welcome to Mike Sheliga's README.md file generator.");
    const licenseInfo = initLicenseInfo(); 
    const licenseNameArray = initLicenseNameArray(licenseInfo);
    const questions = initQuestions(licenseNameArray);
    inq
    .prompt(questions)
    .then((ans) => {
        console.log("Beginning .then");
        const data = gm.generateMarkdown(ans, licenseInfo);
        console.log("The gm data is \n" + data);
        writeToFile('README.md', data)
    });
} // end function init

// Create a list of licenses. Each license has a name, link and badge.
function initLicenseInfo() {
//  License stuff
//    Badges are made with Shields.io.
//    Github has a new autodetection for LICENSE files, which shows the license at the repo overview
//    Shields.io has autogenerated license badges: https://img.shields.io/github/license/<Github-Username>/<Repository>
//    Really nice: https://choosealicense.com/ (if you are unsure, which license to choose)

const licenseInfo = []; 
var license = {}; // must be able to change, so var not const
license.name = "None";
license.badge = "";
license.link = "";
licenseInfo.push(license);
// Apache
license = {}; // redeclare, or else previously pushed licenses change as well.
license.name = "Apache - Apache 2.0 License";
license.badge = "[![License](https://img.shields.io/badge/License-Apache_2.0-blue.svg)]";
license.link = "https://opensource.org/licenses/Apache-2.0";
licenseInfo.push(license);
// Boost
license = {};
license.name = "Boost Software License 1.0";
license.badge = "[![License Boost](https://img.shields.io/badge/License-Boost_1.0-lightblue.svg)]";
license.link = "(https://www.boost.org/LICENSE_1_0.txt)";
licenseInfo.push(license);
// BSD
license = {};
license.name = "BSD 3-Clause License";
license.badge = "[![License](https://img.shields.io/badge/License-BSD_3--Clause-blue.svg)]";
license.link = "(https://opensource.org/licenses/BSD-3-Clause)";
licenseInfo.push(license);
// BSD 2-Clause License
license = {};
license.name = "BSD 2-Clause License";
license.badge = "[![License](https://img.shields.io/badge/License-BSD_2--Clause-orange.svg)]";
license.link = "(https://opensource.org/licenses/BSD-2-Clause)";
licenseInfo.push(license);
// Creative Commons
license = {};
license.name = "Creative Commons CC0-1.0";
license.badge = "[![License: CC0-1.0](https://licensebuttons.net/l/zero/1.0/80x15.png)]";
license.link = "(http://creativecommons.org/publicdomain/zero/1.0/)";
licenseInfo.push(license);
// License: CC BY 4.0
license = {};
license.name = "Creative Commons BY 4.0"; // [License: CC BY 4.0] nor [License] shows up
license.badge = "[![License CC BY 4.0](https://licensebuttons.net/l/by/4.0/80x15.png)]";
license.link = "(https://creativecommons.org/licenses/by/4.0/)";
licenseInfo.push(license);
// Eclipse - Eclipse Public License 1.0
license = {};
license.name = "Eclipse Public License 1.0";
license.badge = "[![License](https://img.shields.io/badge/License-EPL_1.0-red.svg)]";
license.link = "(https://opensource.org/licenses/EPL-1.0)";
licenseInfo.push(license);
// GNU - GNU GPL v3
license = {};
license.name = "GNU GPL v3";
license.badge = "[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)]";
license.link = "(https://www.gnu.org/licenses/gpl-3.0)";
licenseInfo.push(license);
// IBM - IBM Public License Version 1.0
license = {};
license.name = "IBM IPL 1.0";
license.badge = "[![License: IPL 1.0](https://img.shields.io/badge/License-IPL_1.0-blue.svg)]";
license.link = "(https://opensource.org/licenses/IPL-1.0)";
licenseInfo.push(license);
// ISC - ISC License (ISC)
license = {};
license.name = "ISC License";
license.badge = "[![License: ISC](https://img.shields.io/badge/License-ISC-blue.svg)]";
license.link = "(https://opensource.org/licenses/ISC)";
licenseInfo.push(license);
// Mozilla - Mozilla Public License 2.0
license = {};
license.name = "Mozilla Public License  2.0";
license.badge = "[![License: MPL 2.0](https://img.shields.io/badge/License-MPL_2.0-brightgreen.svg)]";
license.link = "(https://opensource.org/licenses/MPL-2.0)";
licenseInfo.push(license);
// Open Data Commons - Attribution License (BY)
license = {};
license.name = "Open Data Commons Attribution";
license.badge = "[![License: Open Data Commons Attribution](https://img.shields.io/badge/License-ODC_BY-brightgreen.svg)]";
license.link = "(https://opendatacommons.org/licenses/by/)";
licenseInfo.push(license);
// Open Database License (ODbL)
license = {};
license.name = "Open Database License ODbL";
license.badge = "[![License: ODbL](https://img.shields.io/badge/License-ODbL-brightgreen.svg)]";
license.link = "(https://opendatacommons.org/licenses/odbl/)";
licenseInfo.push(license);
// Perl - The Perl License
license = {};
license.name = "Perl";
license.badge = "[![License: Artistic-2.0](https://img.shields.io/badge/License-Perl-0298c3.svg)]";
license.link = "(https://opensource.org/licenses/Artistic-2.0)";  // old perl superseded by artistic
licenseInfo.push(license);
// The Artistic License 2.0
license = {};
license.name = "Artistic-2.0";
license.badge = "[![License: Artistic-2.0](https://img.shields.io/badge/License-Artistic_2.0-0298c3.svg)]";
license.link = "(https://opensource.org/licenses/Artistic-2.0)";
licenseInfo.push(license);
// Unlicense - The Unlicense
license = {};
license.name = "Unlicense";
license.badge = "[![License: Unlicense](https://img.shields.io/badge/license-Unlicense-blue.svg)]";
license.link = "(http://unlicense.org/)";
licenseInfo.push(license);
// WTFPL - The Do What the Heck You Want to Public License
license = {};
license.name = "WTFPL";
license.badge = "[![License: WTFPL](https://img.shields.io/badge/License-WTFPL-brightgreen.svg)]";
license.link = "(http://www.wtfpl.net/about/)";
licenseInfo.push(license);
// Zlib - The zlib/libpng License
license = {};
license.name = "Zlib";
license.badge = "[![License: Zlib](https://img.shields.io/badge/License-Zlib-lightgrey.svg)]";
license.link = "(https://opensource.org/licenses/Zlib)";
licenseInfo.push(license);

return licenseInfo;
} // end createLicenseInfo

function initLicenseNameArray(licenseInfo) {
    const licenseNameArray = [];
    for (var license of licenseInfo) {
        console.log("License Name is " + license.name);
        licenseNameArray.push(license.name);
    }
    return licenseNameArray;
} // end initLicenseNameArray 

function initQuestions(licenseNameArray) {
// TODO: Create an array of questions for user input
// description, installation instructions, usage information, contribution guidelines, and test instructions
// Description, Installation,              Usage,             Contributing,            and Tests
    const questions = [
        {
        type: 'input', message: 'Please enter project title:', name: 'title',
        },
        {
        type: 'input', message: 'Please enter project description:', name: 'description',
        },
    //    {
    //      type: 'text', message: 'Please enter installation instructions:', name: 'install',
    //    },
    //    {
    //      type: 'text', message: 'Please enter usage information', name: 'usage',
    //    },    
    //    {
    //        type: 'text', message: 'Please enter contribution guidelines:', name: 'contribution',
    //    },   
    //    {
    //        type: 'text', message: 'Please enter test instructions:', name: 'test',
    //    }, 
        {  // don't see how an object (w/ name, link and badge) can be stored here 
            type: 'rawlist', message: 'Please choose a license:', name: 'license', 
            default: '1', choices: licenseNameArray,
        }, 
    ];
  return questions;
} // end initQuestions 

// =================== Begin the App by Calling Init ======================
// Function call to initialize app
init();